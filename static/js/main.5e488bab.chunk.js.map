{"version":3,"sources":["components/layout/Header.js","components/BoxCalculator/BoxInput.js","components/BoxCalculator/BoxProgress.js","components/BoxCalculator/BoxEstimation.js","components/BoxCalculator/constants.js","components/BoxCalculator/calculation.js","components/BoxCalculator/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleDrawerOpen","setState","open","handleDrawerClose","handleItemClick","e","index","onItemClicked","state","this","AppBar","position","Toolbar","IconButton","color","edge","onClick","Typography","variant","noWrap","currentTool","Drawer","anchor","Divider","List","tools","map","text","ListItem","button","key","selected","ListItemText","primary","Component","useStyles","makeStyles","theme","margin","spacing","BoxInput","current","onChange","classes","onValueChange","target","name","Number","value","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","style","flexDirection","TextField","label","className","targetBox","drewBox","currentToken","currentHonor","currentMeat","BoxProgress","progress","total","requiredToken","completed","drewToken","currentTokenFromHonor","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","LinearProgress","toFixed","BoxEstimation","neededSolos","Tabs","centered","Tab","Object","entries","mob","num","elixir","meat","tokenPerBox","mobInfo","Ex","hostToken","victoryToken","mvpToken","soloHonor","AP","BP","ExPlus","Hell90","Hell95","Hell100","Hell150","getTokenForBox","boxIndex","getTotalTokenToBox","box","getRequiredSolo","targetToken","result","Math","ceil","getSoloTokenForMob","calculateNeededSolo","data","console","log","floor","restToken","keys","BoxCalculator","onInputChange","inputName","Grid","container","item","sm","App","onToolSelected","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e488bab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleItemClick = (e, index) => {\r\n    this.handleDrawerClose();\r\n    this.props.onItemClicked(e, index);\r\n  };\r\n\r\n  render() {\r\n    const handleDrawerOpen = this.handleDrawerOpen;\r\n    const handleDrawerClose = this.handleDrawerClose;\r\n    const open = this.state.open;\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleDrawerOpen}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" noWrap>\r\n              {this.props.currentTool}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"persistent\" anchor=\"left\" open={open}>\r\n          <div>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {this.props.tools.map((text, index) => (\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                selected={this.props.currentTool === index}\r\n                onClick={e => this.handleItemClick(e, index)}\r\n              >\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TextField,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function BoxInput({ current, onChange }) {\r\n  const classes = useStyles();\r\n  const onValueChange = e => {\r\n    onChange(e.target.name, Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>数据输入</Typography>\r\n      </ExpansionPanelSummary>\r\n      <Divider />\r\n      <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\r\n        <div>\r\n          <TextField\r\n            name=\"targetBox\"\r\n            label=\"目标箱数\"\r\n            variant=\"filled\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.targetBox === null ? \"\" : current.targetBox}\r\n          />\r\n          <TextField\r\n            name=\"drewBox\"\r\n            label=\"已刷箱数\"\r\n            variant=\"filled\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.drewBox === null ? \"\" : current.drewBox}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            name=\"currentToken\"\r\n            label=\"持有战货数\"\r\n            variant=\"filled\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentToken === null ? \"\" : current.currentToken}\r\n          />\r\n          <TextField\r\n            name=\"currentHonor\"\r\n            label=\"累计贡献\"\r\n            variant=\"filled\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentHonor === null ? \"\" : current.currentHonor}\r\n          />\r\n          <TextField\r\n            name=\"currentMeat\"\r\n            label=\"持有肉数量\"\r\n            variant=\"filled\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentMeat === null ? \"\" : current.currentMeat}\r\n          />\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nexport default function BoxProgress({ progress }) {\r\n  let total = progress.requiredToken;\r\n  let completed =\r\n    progress.currentToken + progress.drewToken + progress.currentTokenFromHonor;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>进度</TableCell>\r\n            <TableCell align=\"center\">需求战货</TableCell>\r\n            <TableCell align=\"center\">已完成战货</TableCell>\r\n            <TableCell align=\"center\">当前进度</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              总进度\r\n            </TableCell>\r\n            <TableCell align=\"center\">{total}</TableCell>\r\n            <TableCell align=\"center\">{completed}</TableCell>\r\n            <TableCell align=\"center\">\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={total !== 0 ? (completed / total) * 100 : 100}\r\n              />\r\n              {(total !== 0 ? (completed / total) * 100 : 100).toFixed(2) + \"%\"}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Tabs,\r\n  Tab\r\n} from \"@material-ui/core\";\r\n\r\nexport default function BoxEstimation({ neededSolos }) {\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Tabs value={0} centered>\r\n          <Tab label=\"Solo单一关卡\" />\r\n          <Tab label=\"刷肉补正\" />\r\n        </Tabs>\r\n      </Paper>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>还需</TableCell>\r\n              <TableCell align=\"center\">数量</TableCell>\r\n              <TableCell align=\"center\">半红</TableCell>\r\n              <TableCell align=\"center\">肉</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.entries(neededSolos).map(([mob, value]) => {\r\n              return (\r\n                <TableRow key={mob}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {mob}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{value.num}</TableCell>\r\n                  <TableCell align=\"center\">{value.elixir}</TableCell>\r\n                  <TableCell align=\"center\">{value.meat}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","export const tokenPerBox = [1600, 2400, 2400, 2400, 2000, 6000];\r\nexport const ratioHonorToToken = 6000 / 100000000;\r\nexport const mobInfo = {\r\n  Ex: {\r\n    hostToken: 22,\r\n    victoryToken: 20,\r\n    mvpToken: 14,\r\n    soloHonor: 51000,\r\n    AP: 30,\r\n    BP: 1,\r\n    meat: 0\r\n  },\r\n  ExPlus: {\r\n    hostToken: 26,\r\n    victoryToken: 20,\r\n    mvpToken: 20,\r\n    soloHonor: 73000,\r\n    AP: 30,\r\n    BP: 1,\r\n    meat: 0\r\n  },\r\n  Hell90: {\r\n    hostToken: 45,\r\n    victoryToken: 20,\r\n    mvpToken: 18,\r\n    soloHonor: 260000,\r\n    AP: 30,\r\n    BP: 2,\r\n    meat: 5\r\n  },\r\n  Hell95: {\r\n    hostToken: 55,\r\n    victoryToken: 30,\r\n    mvpToken: 26,\r\n    soloHonor: 910000,\r\n    AP: 40,\r\n    BP: 3,\r\n    meat: 10\r\n  },\r\n  Hell100: {\r\n    hostToken: 80,\r\n    victoryToken: 48,\r\n    mvpToken: 40,\r\n    soloHonor: 2650000,\r\n    AP: 50,\r\n    BP: 3,\r\n    meat: 20\r\n  },\r\n  Hell150: {\r\n    hostToken: 100,\r\n    victoryToken: 68,\r\n    mvpToken: 52,\r\n    soloHonor: 3600000,\r\n    AP: 50,\r\n    BP: 3,\r\n    meat: 20\r\n  }\r\n};\r\n","import { tokenPerBox, ratioHonorToToken, mobInfo } from \"./constants.js\";\r\n\r\nfunction getTokenForBox(boxIndex) {\r\n  if (boxIndex < 5) {\r\n    return tokenPerBox[boxIndex - 1];\r\n  } else if (boxIndex < 45) {\r\n    return tokenPerBox[4];\r\n  } else {\r\n    return tokenPerBox[5];\r\n  }\r\n}\r\n\r\nfunction getTotalTokenToBox(boxIndex) {\r\n  let total = 0;\r\n  for (let box = 1; box <= boxIndex; box++) {\r\n    total += getTokenForBox(box);\r\n  }\r\n  return total;\r\n}\r\n\r\nfunction getSoloTokenForMob(mob) {\r\n  return (\r\n    mob.hostToken +\r\n    mob.victoryToken +\r\n    mob.mvpToken +\r\n    mob.soloHonor * ratioHonorToToken\r\n  );\r\n}\r\n\r\nfunction getRequiredSolo(mob, targetToken) {\r\n  let result = {};\r\n  result[\"num\"] = Math.ceil(targetToken / getSoloTokenForMob(mob));\r\n  if (result[\"num\"] < 0) {\r\n    result[\"num\"] = 0;\r\n  }\r\n  result[\"elixir\"] = Math.ceil((mob.AP * result[\"num\"]) / 75);\r\n  if (result[\"elixir\"] < 0) {\r\n    result[\"elixir\"] = 0;\r\n  }\r\n  result[\"meat\"] = result[\"num\"] * mob.meat > 0 ? result[\"num\"] * mob.meat : 0;\r\n  return result;\r\n}\r\n\r\nfunction calculateProgress(targetBox, drewBox, currentToken, currentHonor) {\r\n  let progress = {\r\n    requiredToken: getTotalTokenToBox(targetBox),\r\n    currentToken: currentToken,\r\n    drewToken: getTotalTokenToBox(drewBox),\r\n    currentTokenFromHonor: Math.floor(currentHonor * ratioHonorToToken)\r\n  };\r\n  return progress;\r\n}\r\n\r\nexport function calculateNeededSolo(data) {\r\n  console.log(data.targetBox, data.currentToken);\r\n  let progress = calculateProgress(\r\n    data.targetBox,\r\n    data.drewBox,\r\n    data.currentToken,\r\n    data.currentHonor\r\n  );\r\n  let restToken =\r\n    progress.requiredToken -\r\n    progress.drewToken -\r\n    progress.currentToken -\r\n    progress.currentTokenFromHonor;\r\n\r\n  let neededSolos = {};\r\n  for (let mob of Object.keys(mobInfo)) {\r\n    neededSolos[mob] = getRequiredSolo(mobInfo[mob], restToken);\r\n  }\r\n  return [progress, neededSolos];\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\n\r\nimport BoxInput from \"./BoxInput\";\r\nimport BoxProgress from \"./BoxProgress.js\";\r\nimport BoxEstimation from \"./BoxEstimation.js\";\r\nimport { calculateNeededSolo } from \"./calculation.js\";\r\n\r\nclass BoxCalculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      targetBox: null,\r\n      drewBox: null,\r\n      currentToken: null,\r\n      currentHonor: null,\r\n      currentMeat: null\r\n    };\r\n  }\r\n\r\n  onInputChange = (inputName, value) => {\r\n    this.setState({ [inputName]: Number(value) });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    let [progress, neededSolos] = calculateNeededSolo(this.state);\r\n    // let [progress, neededSolos] = calculateNeededSolo(\r\n    //   20,\r\n    //   2,\r\n    //   11100,\r\n    //   31782647,\r\n    //   1761\r\n    // );\r\n    // console.log(progress);\r\n    // console.log(neededSolos);\r\n    return (\r\n      <Grid container spacing={1}>\r\n        <Grid item sm={12}>\r\n          <Paper>\r\n            <BoxInput current={this.state} onChange={this.onInputChange} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item sm={12}>\r\n          <BoxProgress progress={progress} />\r\n        </Grid>\r\n        <Grid item sm={12}>\r\n          <BoxEstimation neededSolos={neededSolos} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoxCalculator;\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"./components/layout/Header\";\r\nimport BoxCalculator from \"./components/BoxCalculator\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      tools: props.tools,\r\n      currentTool: props.tools[0]\r\n    };\r\n  }\r\n\r\n  onToolSelected = (e, index) => {\r\n    this.setState({ currentTool: this.state.tools[index] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        <Grid item sm={12}>\r\n          <Header\r\n            tools={this.state.tools}\r\n            currentTool={this.state.currentTool}\r\n            onItemClicked={this.onToolSelected}\r\n          />\r\n        </Grid>\r\n        <Grid item sm={12}>\r\n          <BoxCalculator />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <App tools={[\"刷箱计算器\", \"攒井进度计算器\"]} />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}