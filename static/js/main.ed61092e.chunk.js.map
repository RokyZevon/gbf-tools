{"version":3,"sources":["components/layout/Header.js","components/BoxCalculator/BoxInput.js","components/BoxCalculator/BoxProgress.js","components/BoxCalculator/BoxEstimation.js","components/BoxCalculator/constants.js","components/BoxCalculator/calculation.js","components/BoxCalculator/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleDrawerOpen","setState","open","handleDrawerClose","handleItemClick","e","index","onItemClicked","state","this","AppBar","position","Toolbar","IconButton","color","edge","onClick","Typography","variant","noWrap","currentTool","Drawer","anchor","Divider","List","tools","map","text","ListItem","button","key","selected","ListItemText","primary","Component","useStyles","makeStyles","theme","margin","spacing","BoxInput","current","onChange","classes","onValueChange","target","name","Number","value","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","style","flexDirection","TextField","label","className","targetBox","drewBox","currentToken","currentHonor","currentMeat","BoxProgress","progress","total","requiredToken","completed","drewToken","currentTokenFromHonor","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","LinearProgress","toFixed","BoxEstimation","payload","mode","Object","entries","neededSolos","mob","num","elixir","meat","tokenPerBox","mobInfo","Ex","hostToken","victoryToken","mvpToken","soloHonor","AP","BP","meatGain","ExPlus","Hell90","Hell95","Hell100","Hell150","getTokenForBox","boxIndex","getTotalTokenToBox","box","getSoloTokenForMob","getRequiredSolo","targetToken","result","Math","ceil","calculateProgress","floor","calculateNeededSoloWithMeatRefill","data","restToken","estimation","mobMeat","mobHell","getRequiredSoloWithMeatRefill","meatChoice","soloChoice","numMeat","elixirMeat","numHell","elixirHell","BoxCalculator","onInputChange","inputName","onModeChange","estimationMode","onChoiceChange","componentDidMount","JSON","parse","localStorage","getItem","componentDidUpdate","setItem","stringify","meatChoices","keys","filter","soloChoices","calculateNeededSolo","Grid","container","item","xs","Tabs","centered","Tab","alignItems","FormControl","fullWidth","Select","disabled","MenuItem","App","onToolSelected","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed61092e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleItemClick = (e, index) => {\r\n    this.handleDrawerClose();\r\n    this.props.onItemClicked(e, index);\r\n  };\r\n\r\n  render() {\r\n    const handleDrawerOpen = this.handleDrawerOpen;\r\n    const handleDrawerClose = this.handleDrawerClose;\r\n    const open = this.state.open;\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleDrawerOpen}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" noWrap>\r\n              {this.props.currentTool}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"persistent\" anchor=\"left\" open={open}>\r\n          <div>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {this.props.tools.map((text, index) => (\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                selected={this.props.currentTool === index}\r\n                onClick={e => this.handleItemClick(e, index)}\r\n              >\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TextField,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function BoxInput({ current, onChange }) {\r\n  const classes = useStyles();\r\n  const onValueChange = e => {\r\n    onChange(e.target.name, Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>数据输入</Typography>\r\n      </ExpansionPanelSummary>\r\n      <Divider />\r\n      <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\r\n        <div>\r\n          <TextField\r\n            name=\"targetBox\"\r\n            label=\"目标箱数\"\r\n            variant=\"standard\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.targetBox === null ? \"\" : current.targetBox}\r\n          />\r\n          <TextField\r\n            name=\"drewBox\"\r\n            label=\"已刷箱数\"\r\n            variant=\"standard\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.drewBox === null ? \"\" : current.drewBox}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            name=\"currentToken\"\r\n            label=\"持有战货数\"\r\n            variant=\"standard\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentToken === null ? \"\" : current.currentToken}\r\n          />\r\n          <TextField\r\n            name=\"currentHonor\"\r\n            label=\"累计贡献\"\r\n            variant=\"standard\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentHonor === null ? \"\" : current.currentHonor}\r\n          />\r\n          <TextField\r\n            name=\"currentMeat\"\r\n            label=\"持有肉数量\"\r\n            variant=\"standard\"\r\n            className={classes.margin}\r\n            onChange={onValueChange}\r\n            value={current.currentMeat === null ? \"\" : current.currentMeat}\r\n          />\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nexport default function BoxProgress({ progress }) {\r\n  let total = progress.requiredToken;\r\n  let completed =\r\n    progress.currentToken + progress.drewToken + progress.currentTokenFromHonor;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>进度</TableCell>\r\n            <TableCell align=\"center\">需求战货</TableCell>\r\n            <TableCell align=\"center\">已完成战货</TableCell>\r\n            <TableCell align=\"center\">当前进度</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              总进度\r\n            </TableCell>\r\n            <TableCell align=\"center\">{total}</TableCell>\r\n            <TableCell align=\"center\">{completed}</TableCell>\r\n            <TableCell align=\"center\">\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={\r\n                  total !== 0 && completed < total\r\n                    ? (completed / total) * 100\r\n                    : 100\r\n                }\r\n              />\r\n              {(total !== 0 ? (completed / total) * 100 : 100).toFixed(2) + \"%\"}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nexport default function BoxEstimation({ payload }) {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>还需</TableCell>\r\n            <TableCell align=\"center\">数量</TableCell>\r\n            <TableCell align=\"center\">半红</TableCell>\r\n            {payload.mode === 0 && <TableCell align=\"center\">肉</TableCell>}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.entries(payload.neededSolos).map(([mob, value]) => {\r\n            return (\r\n              <TableRow key={mob}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {mob}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{value.num}</TableCell>\r\n                <TableCell align=\"center\">{value.elixir}</TableCell>\r\n                {payload.mode === 0 && (\r\n                  <TableCell align=\"center\">{value.meat}</TableCell>\r\n                )}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","export const tokenPerBox = [1600, 2400, 2400, 2400, 2000, 6000];\r\nexport const ratioHonorToToken = 6000 / 100000000;\r\nexport const mobInfo = {\r\n  Ex: {\r\n    hostToken: 22,\r\n    victoryToken: 20,\r\n    mvpToken: 14,\r\n    soloHonor: 51000,\r\n    AP: 30,\r\n    BP: 1,\r\n    meat: 0,\r\n    meatGain: 3\r\n  },\r\n  ExPlus: {\r\n    hostToken: 26,\r\n    victoryToken: 20,\r\n    mvpToken: 20,\r\n    soloHonor: 73000,\r\n    AP: 30,\r\n    BP: 1,\r\n    meat: 0,\r\n    meatGain: 3.5\r\n  },\r\n  Hell90: {\r\n    hostToken: 45,\r\n    victoryToken: 20,\r\n    mvpToken: 18,\r\n    soloHonor: 260000,\r\n    AP: 30,\r\n    BP: 2,\r\n    meat: 5\r\n  },\r\n  Hell95: {\r\n    hostToken: 55,\r\n    victoryToken: 30,\r\n    mvpToken: 26,\r\n    soloHonor: 910000,\r\n    AP: 40,\r\n    BP: 3,\r\n    meat: 10\r\n  },\r\n  Hell100: {\r\n    hostToken: 80,\r\n    victoryToken: 48,\r\n    mvpToken: 40,\r\n    soloHonor: 2650000,\r\n    AP: 50,\r\n    BP: 3,\r\n    meat: 20\r\n  },\r\n  Hell150: {\r\n    hostToken: 100,\r\n    victoryToken: 68,\r\n    mvpToken: 52,\r\n    soloHonor: 3600000,\r\n    AP: 50,\r\n    BP: 3,\r\n    meat: 20\r\n  }\r\n};\r\n","import { tokenPerBox, ratioHonorToToken, mobInfo } from \"./constants.js\";\r\n\r\nfunction getTokenForBox(boxIndex) {\r\n  if (boxIndex < 5) {\r\n    return tokenPerBox[boxIndex - 1];\r\n  } else if (boxIndex < 45) {\r\n    return tokenPerBox[4];\r\n  } else {\r\n    return tokenPerBox[5];\r\n  }\r\n}\r\n\r\nfunction getTotalTokenToBox(boxIndex) {\r\n  let total = 0;\r\n  for (let box = 1; box <= boxIndex; box++) {\r\n    total += getTokenForBox(box);\r\n  }\r\n  return total;\r\n}\r\n\r\nfunction getSoloTokenForMob(mob) {\r\n  return (\r\n    mob.hostToken +\r\n    mob.victoryToken +\r\n    mob.mvpToken +\r\n    mob.soloHonor * ratioHonorToToken\r\n  );\r\n}\r\n\r\nfunction getRequiredSolo(mob, targetToken) {\r\n  let result = {};\r\n  result[\"num\"] = Math.ceil(targetToken / getSoloTokenForMob(mob));\r\n  if (result[\"num\"] < 0) {\r\n    result[\"num\"] = 0;\r\n  }\r\n  result[\"elixir\"] = Math.ceil((mob.AP * result[\"num\"]) / 75);\r\n  if (result[\"elixir\"] < 0) {\r\n    result[\"elixir\"] = 0;\r\n  }\r\n  result[\"meat\"] = result[\"num\"] * mob.meat > 0 ? result[\"num\"] * mob.meat : 0;\r\n\r\n  return result;\r\n}\r\n\r\nfunction getRequiredSoloWithMeatRefill(\r\n  mobMeat,\r\n  mobHell,\r\n  targetToken,\r\n  currentMeat\r\n) {\r\n  let result = {};\r\n  result[\"numMeat\"] = Math.ceil(\r\n    (targetToken - (currentMeat / mobHell.meat) * getSoloTokenForMob(mobHell)) /\r\n      (getSoloTokenForMob(mobMeat) +\r\n        (mobMeat.meatGain / mobHell.meat) * getSoloTokenForMob(mobHell))\r\n  );\r\n  if (result[\"numMeat\"] < 0) {\r\n    result[\"numMeat\"] = 0;\r\n  }\r\n  result[\"numHell\"] =\r\n    result[\"numMeat\"] > 0\r\n      ? Math.floor(\r\n          (currentMeat + result[\"numMeat\"] * mobMeat.meatGain) / mobHell.meat\r\n        )\r\n      : Math.ceil(targetToken / getSoloTokenForMob(mobHell));\r\n  if (result[\"numHell\"] < 0) {\r\n    result[\"numHell\"] = 0;\r\n  }\r\n  result[\"elixirMeat\"] = Math.ceil((mobMeat.AP * result[\"numMeat\"]) / 75);\r\n  result[\"elixirHell\"] = Math.ceil((mobHell.AP * result[\"numHell\"]) / 75);\r\n  if (result[\"elixirMeat\"] < 0) {\r\n    result[\"elixirMeat\"] = 0;\r\n  }\r\n  if (result[\"elixirHell\"] < 0) {\r\n    result[\"elixirHell\"] = 0;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction calculateProgress(targetBox, drewBox, currentToken, currentHonor) {\r\n  let progress = {\r\n    requiredToken: getTotalTokenToBox(targetBox),\r\n    currentToken: currentToken,\r\n    drewToken: getTotalTokenToBox(drewBox),\r\n    currentTokenFromHonor: Math.floor(currentHonor * ratioHonorToToken)\r\n  };\r\n  return progress;\r\n}\r\n\r\nexport function calculateNeededSolo(data) {\r\n  let progress = calculateProgress(\r\n    data.targetBox,\r\n    data.drewBox,\r\n    data.currentToken,\r\n    data.currentHonor\r\n  );\r\n  let restToken =\r\n    progress.requiredToken -\r\n    progress.drewToken -\r\n    progress.currentToken -\r\n    progress.currentTokenFromHonor;\r\n\r\n  let neededSolos = {};\r\n  for (let mob of Object.keys(mobInfo)) {\r\n    neededSolos[mob] = getRequiredSolo(mobInfo[mob], restToken);\r\n  }\r\n  return [progress, neededSolos];\r\n}\r\n\r\nexport function calculateNeededSoloWithMeatRefill(data) {\r\n  let progress = calculateProgress(\r\n    data.targetBox,\r\n    data.drewBox,\r\n    data.currentToken,\r\n    data.currentHonor\r\n  );\r\n  let restToken =\r\n    progress.requiredToken -\r\n    progress.drewToken -\r\n    progress.currentToken -\r\n    progress.currentTokenFromHonor;\r\n\r\n  let neededSolos = {};\r\n\r\n  let estimation = getRequiredSoloWithMeatRefill(\r\n    mobInfo[data.meatChoice],\r\n    mobInfo[data.soloChoice],\r\n    restToken,\r\n    data.currentMeat\r\n  );\r\n  neededSolos[data.meatChoice] = {\r\n    num: estimation.numMeat,\r\n    elixir: estimation.elixirMeat\r\n  };\r\n  neededSolos[data.soloChoice] = {\r\n    num: estimation.numHell,\r\n    elixir: estimation.elixirHell\r\n  };\r\n\r\n  return [progress, neededSolos];\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  FormControl\r\n} from \"@material-ui/core\";\r\n\r\nimport BoxInput from \"./BoxInput\";\r\nimport BoxProgress from \"./BoxProgress.js\";\r\nimport BoxEstimation from \"./BoxEstimation.js\";\r\nimport {\r\n  calculateNeededSolo,\r\n  calculateNeededSoloWithMeatRefill\r\n} from \"./calculation.js\";\r\nimport { mobInfo } from \"./constants\";\r\n\r\nconst SOLO = 0;\r\nconst SOLOandMEAT = 1;\r\n\r\nclass BoxCalculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      targetBox: null,\r\n      drewBox: null,\r\n      currentToken: null,\r\n      currentHonor: null,\r\n      currentMeat: null,\r\n      estimationMode: SOLO,\r\n      meatChoice: \"Ex\",\r\n      soloChoice: \"Hell90\"\r\n    };\r\n  }\r\n\r\n  onInputChange = (inputName, value) => {\r\n    this.setState({ [inputName]: Number(value) });\r\n  };\r\n\r\n  onModeChange = (e, mode) => {\r\n    this.setState({ estimationMode: mode });\r\n  };\r\n\r\n  onChoiceChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState(JSON.parse(localStorage.getItem(\"BoxCalculator\")));\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    localStorage.setItem(\"BoxCalculator\", JSON.stringify(this.state));\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    const meatChoices = Object.keys(mobInfo).filter(mob => !mobInfo[mob].meat);\r\n    const soloChoices = Object.keys(mobInfo).filter(mob => mobInfo[mob].meat);\r\n    let payload = {\r\n      mode: this.state.estimationMode,\r\n      progress: null,\r\n      neededSolos: null\r\n    };\r\n    switch (this.state.estimationMode) {\r\n      case SOLO:\r\n        [payload.progress, payload.neededSolos] = calculateNeededSolo(\r\n          this.state\r\n        );\r\n        break;\r\n      case SOLOandMEAT:\r\n        [\r\n          payload.progress,\r\n          payload.neededSolos\r\n        ] = calculateNeededSoloWithMeatRefill(this.state);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <BoxInput current={this.state} onChange={this.onInputChange} />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <BoxProgress progress={payload.progress} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <Tabs\r\n              value={this.state.estimationMode}\r\n              onChange={this.onModeChange}\r\n              centered\r\n            >\r\n              <Tab value={SOLO} label=\"Solo单一关卡\" />\r\n              <Tab value={SOLOandMEAT} label=\"Solo+补肉\" />\r\n            </Tabs>\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item xs={3}>\r\n                <FormControl fullWidth>\r\n                  <Select\r\n                    name=\"meatChoice\"\r\n                    value={this.state.meatChoice}\r\n                    disabled={this.state.estimationMode === SOLO}\r\n                    onChange={this.onChoiceChange}\r\n                  >\r\n                    {meatChoices.map(mob => {\r\n                      return (\r\n                        <MenuItem key={mob} value={mob}>\r\n                          {mob}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <FormControl fullWidth>\r\n                  <Select\r\n                    name=\"soloChoice\"\r\n                    value={this.state.soloChoice}\r\n                    disabled={this.state.estimationMode === SOLO}\r\n                    onChange={this.onChoiceChange}\r\n                  >\r\n                    {soloChoices.map(mob => {\r\n                      return (\r\n                        <MenuItem key={mob} value={mob}>\r\n                          {mob}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                {this.state.estimationMode === SOLOandMEAT && (\r\n                  <Typography variant=\"subtitle2\" align=\"center\">\r\n                    计算假设平均每只{this.state.meatChoice}掉落\r\n                    {mobInfo[this.state.meatChoice].meatGain}肉\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <BoxEstimation payload={payload} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoxCalculator;\r\n","import React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./components/layout/Header\";\nimport BoxCalculator from \"./components/BoxCalculator\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      tools: props.tools,\n      currentTool: props.tools[0]\n    };\n  }\n\n  onToolSelected = (e, index) => {\n    this.setState({ currentTool: this.state.tools[index] });\n  };\n\n  render() {\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <Header\n            tools={this.state.tools}\n            currentTool={this.state.currentTool}\n            onItemClicked={this.onToolSelected}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <BoxCalculator />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App tools={[\"刷箱计算器\", \"攒井进度计算器\"]} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}